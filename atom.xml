<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StormZang‘s Blog</title>
  
  <subtitle>非宁静无以致远 非淡泊无以明志</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://stormzang.xyz/"/>
  <updated>2017-12-22T02:27:18.000Z</updated>
  <id>http://stormzang.xyz/</id>
  
  <author>
    <name>stormzang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://stormzang.xyz/2017/12/22/Sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://stormzang.xyz/2017/12/22/Sql注入漏洞/</id>
    <published>2017-12-22T02:30:03.792Z</published>
    <updated>2017-12-22T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><strong>原理：</strong> 网站数据传输中，接受变量传递的值未进行过滤，导致直接带入数据库查询执行的操作问题。</li><li><strong>必备条件：</strong><blockquote><p>1.变量接受<br>2.带入数据库查询执行<br>3.不存在过滤（可尝试绕过)</p></blockquote></li><li><strong>Access注入</strong></li></ol><ul><li>联合查询 ：判断注入（<code>order by 6</code>），猜解表名(<code>union  select 1,2,3 form admin</code>)，猜解列名，猜解数据<br><strong>猜解不到的时候：</strong>1.字典文件收集 2.Access偏移注入 </li><li>逐字猜解：<br>查表，查列（<code>and exists(select 列名 from 表名)</code>），查数据(1. 确定长度 2. 确定ascll码)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">and(select top 1 len(列名)from admin)=5</div><div class="line">and(select top 1 asc(mid(列名,位数,1))from admin)=97</div></pre></td></tr></table></figure></li></ul><ol><li><strong>Mysql注入</strong><br>mysql5.0以上自带一个information_schema数据库：存储所有数据库信息<br>数据库名：<code>database()</code><br>数据库用户：<code>user()</code><br>数据库版本：<code>version()</code><br>操作系统：<code>@@version_compile_os</code><br>符号“.”：代表下一级<br>information_schema.tables：数据库下tables表名，存储所有数据库下的表名信息的表<br>information_schema.columuns：存储所有数据库下的列名信息的表<br>Table_schema：数据库名<br>Table_name：表名<br>Column_name：列名<br>查询数据库名test下的所有表名：<code>union select tabale_name,2,3 from information_schema_tables where table_schema=test</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;strong&gt;原理：&lt;/strong&gt; 网站数据传输中，接受变量传递的值未进行过滤，导致直接带入数据库查询执行的操作问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;必备条件：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;1.变量接受&lt;br&gt;2.带入数据库查询执行
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://stormzang.xyz/2017/12/22/6-%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <id>http://stormzang.xyz/2017/12/22/6-暴力破解/</id>
    <published>2017-12-22T02:30:03.792Z</published>
    <updated>2017-12-22T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>###1.利用burpsuite爆破</p><ul><li>抓包</li><li>ctrl+I将包复制到intruder模块，因为要对password参数进行爆破，所以在password参数的内容两边加$</li><li>选中Payloads，载入字典，点击Start attack进行爆破<br>###2.手工sql注入</li><li>username:<code>admin&#39;or&#39;1&#39;=&#39;1</code><br>-username: <code>admin&#39;#</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###1.利用burpsuite爆破&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抓包&lt;/li&gt;
&lt;li&gt;ctrl+I将包复制到intruder模块，因为要对password参数进行爆破，所以在password参数的内容两边加$&lt;/li&gt;
&lt;li&gt;选中Payloads，载入字典，点击Star
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://stormzang.xyz/2017/12/22/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://stormzang.xyz/2017/12/22/渗透工具的使用/</id>
    <published>2017-12-22T02:30:03.792Z</published>
    <updated>2017-12-22T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>##1.BurpSuite<br>BurpSuite核心组件<br>站点目标（target）：提供站点地图，网站的目录架构<br>截断代理（proxy）：可以截获和修改浏览器与目标Web应用之间的通讯数据<br>爬虫程序（spider）：获得目标Web应用内容和功能<br>应用扫描（scanner）：自动扫描目标Web应用漏洞<br>入侵检测（intruder）：通过自定义攻击数据，发现应用漏洞<br>重发包器（repeater）：重发独立的请求数据<br>序列分析器（sequencer）：测试会话随机性<br>解码器（decoder）：对数据进行编码、解码<br>对比工具（comparer）：可对两个文件内容进行对比，找出差异<br>扩展（extender）：可以让你加载BurpSuite的扩展，使用你自己的或第三方代码来扩展Burp Suit的功能<br>设置（options）：对BurpSuite的一些设置<br>告警器（alerts）：BurpSuite告警信息</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##1.BurpSuite&lt;br&gt;BurpSuite核心组件&lt;br&gt;站点目标（target）：提供站点地图，网站的目录架构&lt;br&gt;截断代理（proxy）：可以截获和修改浏览器与目标Web应用之间的通讯数据&lt;br&gt;爬虫程序（spider）：获得目标Web应用内容和功能&lt;br&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://stormzang.xyz/2017/12/22/1-XSS%E6%BC%8F%E6%B4%9E/"/>
    <id>http://stormzang.xyz/2017/12/22/1-XSS漏洞/</id>
    <published>2017-12-22T02:30:03.776Z</published>
    <updated>2017-12-22T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<h6 id="xss-全称cross-site-scripting，是用于攻击Web客户端而不是服务器端，其最大的特点是能把恶意的JS或HTML代码注入到用户浏览的网页上。而XSS漏洞的存在，主要是由于Web应用程序对用户的输入没有进行严格的过滤所导致的，当攻击者把恶意代码注入到网页时，用户只要访问该网页就会执行其中的恶意代码。"><a href="#xss-全称cross-site-scripting，是用于攻击Web客户端而不是服务器端，其最大的特点是能把恶意的JS或HTML代码注入到用户浏览的网页上。而XSS漏洞的存在，主要是由于Web应用程序对用户的输入没有进行严格的过滤所导致的，当攻击者把恶意代码注入到网页时，用户只要访问该网页就会执行其中的恶意代码。" class="headerlink" title="xss:  全称cross-site scripting，是用于攻击Web客户端而不是服务器端，其最大的特点是能把恶意的JS或HTML代码注入到用户浏览的网页上。而XSS漏洞的存在，主要是由于Web应用程序对用户的输入没有进行严格的过滤所导致的，当攻击者把恶意代码注入到网页时，用户只要访问该网页就会执行其中的恶意代码。"></a>xss:  全称cross-site scripting，是用于攻击Web客户端而不是服务器端，其最大的特点是能把恶意的JS或HTML代码注入到用户浏览的网页上。而XSS漏洞的存在，主要是由于Web应用程序对用户的输入没有进行严格的过滤所导致的，当攻击者把恶意代码注入到网页时，用户只要访问该网页就会执行其中的恶意代码。</h6><ol><li><p><strong>反射型xss（非持久）:</strong> 反射型xss一般是指自定义内容发送的服务器，服务器返回到客户端显示时产生的脚本执行。常见在<em>搜索</em>功能中。</p><p> <strong>检测方式：</strong> 输入数据提交，看返回的内容是不是还是原来的内容，若是则很大可能存在漏洞。有时候返回的网页信息可能没有显示原来输入的内容，但是可以通过查看网页源代码可以查看输入的内容有没有注入到网页的html代码中，若有则也明显存在。主要用于窃取客户端cookie和钓鱼欺骗。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt;</div><div class="line">&lt;a href=https://www.baidu.com&gt;click&lt;/a&gt;</div><div class="line">&lt;a href=’’ onclick=alert(&apos;xss&apos;)&gt;type&lt;/a&gt;</div><div class="line">去相应的网站访问不到相应的图片文件时就报错弹窗：</div><div class="line">&lt;img src=http://10.10.10.137/alan.jpg onerror=alert(&apos;xss&apos;)&gt;</div></pre></td></tr></table></figure></li></ol><hr><ol><li><p><strong>存储型xss:（持久）</strong> 存储型xss是指用户输入的xss脚本存储到了<em>数据库</em>中，例如留言板功能，每次查看留言时都会触发。</p><p> <strong>检测方式：</strong> 在留言板内容中输入<code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>弹出cookie信息</p></li></ol><hr><ol><li><p><strong>DOM型xss:</strong> 其实是一种特殊类型的反射型XSS，它是基于DOM文档对象模型的一种漏洞。客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p><p> <strong>DOM</strong>: 全称Document Object Model，是一个平台和语言都中立的接口，可以使程序和脚本能够动态访问和更新文档的内容、结构以及样式。</p><p> <strong>检测方式：</strong>构造payload<code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code> 触发弹窗<code>‘；alert(/xss/)//</code><br><strong>(注意)</strong> javascript中var 用于声明变量，为变量声明文本值时加引号如<code>var $a=&#39;xxx&#39;;</code> 所以要闭合前一个单引号，注释后一个单引号才能触发弹窗。</p><p> <strong>防御方法:</strong> DOM型XSS主要是由客户端的脚本通过DOM动态地输出数据到页面而不是依赖于将数据提交给服务器端，而从客户端获得DOM中的数据在本地执行，因而仅从服务器端是无法防御的。</p></li></ol><ul><li>避免客户端文档重写、重定向或其他敏感操作，同时避免使用客户端数据，这些操作尽量在服务器端使用动态页面来实现；</li></ul><h2 id="分析和强化客户端JS代码，特别是受到用户影响的DOM对象，注意能直接修改DOM和创建HTML文件的相关函数或方法，并在输出变量到页面时先进行编码转义，如输出到HTML则进行HTML编码、输出到则进行JS编码。"><a href="#分析和强化客户端JS代码，特别是受到用户影响的DOM对象，注意能直接修改DOM和创建HTML文件的相关函数或方法，并在输出变量到页面时先进行编码转义，如输出到HTML则进行HTML编码、输出到则进行JS编码。" class="headerlink" title="- 分析和强化客户端JS代码，特别是受到用户影响的DOM对象，注意能直接修改DOM和创建HTML文件的相关函数或方法，并在输出变量到页面时先进行编码转义，如输出到HTML则进行HTML编码、输出到则进行JS编码。  "></a>- 分析和强化客户端JS代码，特别是受到用户影响的DOM对象，注意能直接修改DOM和创建HTML文件的相关函数或方法，并在输出变量到页面时先进行编码转义，如输出到HTML则进行HTML编码、输出到<script>则进行JS编码。  </h2><p><strong>4. 利用XSS漏洞</strong></p><ul><li>利用innerHTML：用于纂改页面<br><code>&lt;script&gt;document.body.innerHTML=&quot;&lt;div style=visibility:visible;&gt;&lt;h1&gt;This is DOM XSS&lt;/h1&gt;&lt;/div&gt;&quot;;&lt;/script&gt;</code></li><li>利用 重定向：<br><code>&lt;script&gt;window.location=&#39;https://www.baidu.com&#39;&lt;/script&gt;</code><h2 id="lt-iframe-SRC-quot-http-www-sina-com-quot-height-quot-0-quot-width-quot-0-quot-gt-lt-iframe-gt"><a href="#lt-iframe-SRC-quot-http-www-sina-com-quot-height-quot-0-quot-width-quot-0-quot-gt-lt-iframe-gt" class="headerlink" title="&lt;iframe SRC=&quot;http://www.sina.com&quot; height=&quot;0&quot; width=&quot;0&quot;&gt;&lt;/iframe&gt;"></a><code>&lt;iframe SRC=&quot;http://www.sina.com&quot; height=&quot;0&quot; width=&quot;0&quot;&gt;&lt;/iframe&gt;</code></h2><strong>5. xss字符过滤</strong></li><li><script>标签的S大写</li><li>如果源码匹配大小写： <code>&lt;scr&lt;script&gt;ipt&gt;alert(&quot;xss&quot;)&lt;/scr&lt;/script&gt;ipt&gt;</code></li><li>如果源码中发现传到后台的字符串中如果存在“script”（大小写不分），就会返回error：<br><code>&lt;img src=1 onerror=alert(&quot;xss&quot;)&gt;</code><br><code>name=&lt;a herf=&quot;x&quot; onclick=&quot;alert(/xss/)&quot;&gt;test&lt;/a&gt;</code></li><li>传到后台的字符串中如果存在“alert”（大小写不分），就会返回error：<code>&lt;script&gt;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 34, 65, 78, 89, 34, 41))&lt;/script&gt;</code></li></ul></script></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;xss-全称cross-site-scripting，是用于攻击Web客户端而不是服务器端，其最大的特点是能把恶意的JS或HTML代码注入到用户浏览的网页上。而XSS漏洞的存在，主要是由于Web应用程序对用户的输入没有进行严格的过滤所导致的，当攻击者把恶意代码注入
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://stormzang.xyz/2017/12/22/0-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    <id>http://stormzang.xyz/2017/12/22/0-信息搜集/</id>
    <published>2017-12-22T02:30:03.761Z</published>
    <updated>2017-12-22T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><strong>判断操作系统</strong></li></ol><ul><li>windows不区分大小写，Linux区分大小写</li><li>IIS只存在于windows，nginx多用于Linux</li><li>站长之家：seo综合查询</li></ul><p>2.<strong>数据库类型</strong></p><ul><li>探测不到原因：改端口，内网服务器，站库分离</li><li>数据库默认端口(1-65535)：<blockquote><p>Mysql 3306<br> Mssql 1433<br>Oracle 1521&gt;</p></blockquote></li></ul><ol><li><strong>判断网站架设环境</strong></li></ol><ul><li>浏览器审查元素 （F12)中network中接收的数据包</li><li>常见的搭建分析：<blockquote><p>PHP跟Mysql<br>ASP跟access msql<br>Aspx跟mssql（sql server）<br>Jsp跟mssql Oracle</p></blockquote></li></ul><ol><li><strong>网站架构</strong></li></ol><ul><li>开源CMS搭建  or  非开源CMS搭建 （通过网站标识或者指纹识别工具判断）</li><li>阿里云，腾讯云 or  小中型IDC空间商  or 企业内部服务器（火狐浏览器插件）</li><li>单一站点  or  多域名站点  or  多目录站点  or  混合站点（一个ip端口不同网站不同）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;strong&gt;判断操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;windows不区分大小写，Linux区分大小写&lt;/li&gt;
&lt;li&gt;IIS只存在于windows，nginx多用于Linux&lt;/li&gt;
&lt;li&gt;站长之家：seo综合查询&lt;/l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://stormzang.xyz/2017/11/07/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://stormzang.xyz/2017/11/07/Markdown语法/</id>
    <published>2017-11-07T02:43:28.000Z</published>
    <updated>2017-11-24T08:46:38.126Z</updated>
    
    <content type="html"><![CDATA[<p>标题：几级标题就有几个#<br>列表：有序列表（1.） 无序列表（- + <em>）<br>链接：中括号 小括号<br>图片：感叹号 中括号 小括号<br>引用：&gt;<br>粗体：两个 </em><br>斜体：一个 *<br>表格：|—<br>代码：``<br>代码块：``````<br>注释：标签后面要加空格</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;标题：几级标题就有几个#&lt;br&gt;列表：有序列表（1.） 无序列表（- + &lt;em&gt;）&lt;br&gt;链接：中括号 小括号&lt;br&gt;图片：感叹号 中括号 小括号&lt;br&gt;引用：&amp;gt;&lt;br&gt;粗体：两个 &lt;/em&gt;&lt;br&gt;斜体：一个 *&lt;br&gt;表格：|—&lt;br&gt;代码：``&lt;br&gt;代码块：
      
    
    </summary>
    
      <category term="笔记" scheme="http://stormzang.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="学习笔记" scheme="http://stormzang.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
